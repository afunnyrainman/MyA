package com.example.user.mya.Activity;import android.app.FragmentTransaction;import android.content.ComponentName;import android.content.Intent;import android.net.Uri;import android.os.AsyncTask;import android.os.Bundle;import android.os.Environment;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.NavigationView;import android.support.design.widget.Snackbar;import android.support.v4.view.GravityCompat;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.ActionBarDrawerToggle;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.example.user.mya.Fragement.frage_main;import com.example.user.mya.MyApli.MyAplication;import com.example.user.mya.R;import com.example.user.mya.Utils.DateUtils;import com.example.user.mya.Utils.SharedPreferencesUtils;import com.example.user.mya.Utils.SimpleHUD;import com.example.user.mya.Utils.Utils;import com.example.user.mya.entity.one_entity;import com.tencent.connect.UserInfo;import com.tencent.connect.common.Constants;import com.tencent.tauth.IUiListener;import com.tencent.tauth.Tencent;import com.tencent.tauth.UiError;import org.json.JSONObject;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.util.ArrayList;import java.util.List;import c.b.BP;import c.b.PListener;import cn.bmob.push.BmobPush;import cn.bmob.v3.Bmob;import cn.bmob.v3.BmobInstallation;import jp.wasabeef.glide.transformations.CropCircleTransformation;public class MainActivity extends BaseActivity        implements NavigationView.OnNavigationItemSelectedListener, View.OnClickListener {    private static final String APPID = "1105177443";    NavigationView nav_view;    ImageView Img_User;    private Tencent mTencent;//腾讯    private String scope = "all";    private IUiListener loginListener;    private IUiListener userInfoListener;    private UserInfo userInfo;    private TextView tv_username;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        BP.init(this, MyAplication.BMOBAPPLICTIONID);        SharedPreferencesUtils.SavaSharedPreferences(                MainActivity.this,SharedPreferencesUtils.LOGINVALUE,SharedPreferencesUtils.TITLEJILU,"");        //第一：默认初始化        Bmob.initialize(this, MyAplication.BMOBAPPLICTIONID);        //初始化本地数据库        // 使用推送服务时的初始化操作        BmobInstallation.getCurrentInstallation().save();        // 启动推送服务        BmobPush.startWork(this);        initData();        //加载策划控件        init();        //添加点击监听        addOnClick();        //加载碎片        GotoMainFragment();        isLogin();    }    /**     * 是否登录获得缓存     */    private void isLogin() {        String loginValue = SharedPreferencesUtils.getSharedPreferences(MainActivity.this,                SharedPreferencesUtils.VALUEONENAME, SharedPreferencesUtils.LOGINVALUE);        if (loginValue != null) {            loginLast(loginValue);        }    }    public frage_main frageMain;    /**     * 显示全部数据     */    private void GotoMainFragment() {        frageMain = new frage_main();        frageMain.setUrl(MyAplication.getMyAplication().getUrlMain());        FragmentTransaction tran = getFragmentManager().beginTransaction();        tran.replace(R.id.fragment_main, frageMain);        getOneValue(MyAplication.getMyAplication().getUrlMain());        tran.commit();    }    /**     * 側滑     */    private void init() {        nav_view = (NavigationView) findViewById(R.id.nav_view);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        //setSupportActionBar(toolbar);        View headerView = nav_view.getHeaderView(0);        tv_username = (TextView) headerView.findViewById(R.id.tv_username);        Img_User = (ImageView) headerView.findViewById(R.id.Img_User);        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {            }        });        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);        drawer.setDrawerListener(toggle);        toggle.syncState();        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);        navigationView.setNavigationItemSelectedListener(this);    }    private void addOnClick() {        Img_User.setOnClickListener(this);    }    @Override    public void onBackPressed() {        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);        if (drawer.isDrawerOpen(GravityCompat.START)) {//策划是打开状态            drawer.closeDrawer(GravityCompat.START);//关闭        } else {            back();//返回逻辑        }    }    //按下返回按钮    private long lastBackClick = System.currentTimeMillis();    /**     * 返回     */    private void back() {        //如果是详细页面当前        if (MyAplication.getMyAplication().getDijige().equals("4")) {            frageMain.setUrl(MyAplication.getMyAplication().getUrlthere());            FragmentTransaction tran = getFragmentManager().beginTransaction();            tran.replace(R.id.fragment_main, frageMain);            //加载碎片            getOneValue(MyAplication.getMyAplication().getUrlthere());            tran.commit();            getOneValue(MyAplication.getMyAplication().getUrlthere());            frageMain.setDate(data);            MyAplication.getMyAplication().setDijige("3");        } else if (MyAplication.getMyAplication().getDijige().equals("3")) {//如果是碎片需要改数据源            frageMain.setUrl(MyAplication.getMyAplication().getUrlTwo());            getOneValue(MyAplication.getMyAplication().getUrlTwo());            frageMain.setDate(data);            MyAplication.getMyAplication().setDijige("2");        } else if (MyAplication.getMyAplication().getDijige().equals("2")) {            frageMain.setUrl(MyAplication.getMyAplication().getUrlMain());            getOneValue(MyAplication.getMyAplication().getUrlMain());            frageMain.setDate(data);            MyAplication.getMyAplication().setDijige("1");        } else if (MyAplication.getMyAplication().getDijige().equals("1")) {            if (System.currentTimeMillis() - lastBackClick <= 1000) {                super.onBackPressed();            } else {                getOneValue(SharedPreferencesUtils.MAINURL);                Snackbar.make(nav_view, "再次返回退出程序", Snackbar.LENGTH_SHORT).show();            }            lastBackClick = System.currentTimeMillis();        }    }    private List<one_entity> data = new ArrayList<one_entity>();    /**     * 查询首页的信息有就查缓存     *     * @param url     */    private void getOneValue(final String url) {        if (!MyAplication.getMyAplication().getDijige().equals("1")) {            data.clear();            String oneValue = SharedPreferencesUtils.getSharedPreferences(MainActivity.this, SharedPreferencesUtils.VALUEONENAME,                    SharedPreferencesUtils.ONENAME + url);            if (oneValue == null) {                // data.addAll(DateUtils.getDateList(this,url,name,handler));//网络获取                if (Utils.isOnline(MainActivity.this)) {                    SimpleHUD                            .showLoadingMessage(MainActivity.this, "正在查询...", false);                    AsyncTask<String, Long, String> task = new AsyncTask<String, Long, String>() {                        @Override                        protected String doInBackground(String... s) {                            // TODO Auto-generated method stub                            Document doc = null;                            try {                                doc = Jsoup.connect(url).get();                            } catch (IOException e) {                                e.printStackTrace();                            }                            return doc.toString();                        }                        // 查询成功                        @Override                        protected void onPostExecute(String result) {                            // TODO Auto-generated method stub                            super.onPostExecute(result);                            SimpleHUD.dismiss();                            if (Utils.Nonull(result)) {                                SharedPreferencesUtils.SavaSharedPreferences(MainActivity.this, SharedPreferencesUtils.VALUEONENAME,                                        SharedPreferencesUtils.ONENAME + url, result);                                data.addAll(DateUtils.getDate(result, url));                            } else {                                Utils.showOnlinError(MainActivity.this);                            }                        }                    };                    task.execute();                } else {                }            } else {                data.addAll(DateUtils.getDate(oneValue, url));//解析            }        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        return super.onOptionsItemSelected(item);    }    @SuppressWarnings("StatementWithEmptyBody")    @Override    public boolean onNavigationItemSelected(MenuItem item) {        // Handle navigation view item clicks here.        int id = item.getItemId();        Intent intent = new Intent();        if (id == R.id.nav_camera) {            // Handle the camera action            /*intent.setClass(MainActivity.this, Activity_ZanZhuMe.class);            startActivity(intent);*/            //pay(false);        } else if (id == R.id.nav_gallery) {        } else if (id == R.id.nav_slideshow) {            //策划菜单的浏览记录按钮            intent.setClass(MainActivity.this, Activity_RecordMain.class);            startActivity(intent);        } else if (id == R.id.nav_manage) {            //短信验证 39165532        /*    intent.setClass(MainActivity.this, Activity_Duanxin.class);            startActivity(intent);*/        } else if (id == R.id.nav_live) {            //策划菜单的我的收藏按钮            intent.setClass(MainActivity.this, Activity_LiveMain.class);            startActivity(intent);        } else if (id == R.id.nav_send) {            //评论列表            intent.setClass(MainActivity.this, Activity_CommentMain.class);            startActivity(intent);        }        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);        drawer.closeDrawer(GravityCompat.START);        return true;    }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.Img_User:                QQlogin();                break;        }    }    private void initData() {        mTencent = Tencent.createInstance(APPID, MainActivity.this);        loginListener = new IUiListener() {            @Override            public void onError(UiError arg0) {                // TODO Auto-generated method stub            }            @Override            public void onComplete(Object value) {                // TODO Auto-generated method stub                if (value == null) {                    return;                }                try {                    JSONObject jo = (JSONObject) value;                    String msg = jo.getString("msg");                    if ("sucess".equals(msg)) {                        String openID = jo.getString("openid");                        String accessToken = jo.getString("access_token");                        String expires = jo.getString("expires_in");                        mTencent.setOpenId(openID);                        mTencent.setAccessToken(accessToken, expires);                    }                    if (mTencent.getQQToken() == null) {                    }                    userInfo = new UserInfo(MainActivity.this, mTencent.getQQToken());                    userInfo.getUserInfo(userInfoListener);                } catch (Exception e) {                    // TODO: handle exception                }            }            @Override            public void onCancel() {                // TODO Auto-generated method stub            }        };        userInfoListener = new IUiListener() {            @Override            public void onError(UiError arg0) {                // TODO Auto-generated method stub            }            @Override            public void onComplete(Object arg0) {                // TODO Auto-generated method stub                if (arg0 == null) {                    return;                }                try {                    JSONObject jo = (JSONObject) arg0;                    int ret = jo.getInt("ret");                    if (ret == 100030) {                        //权限不够，需要增量授权                        Runnable r = new Runnable() {                            public void run() {                                mTencent.reAuth(MainActivity.this, "all", new IUiListener() {                                    @Override                                    public void onError(UiError arg0) {                                        // TODO Auto-generated method stub                                    }                                    @Override                                    public void onComplete(Object arg0) {                                        // TODO Auto-generated method stub                                    }                                    @Override                                    public void onCancel() {                                        // TODO Auto-generated method stub                                    }                                });                            }                        };                        MainActivity.this.runOnUiThread(r);                    } else {                        String nickName = jo.getString("nickname");                        String url = jo.getString("figureurl_qq_2");                        loginLast(nickName + "-" + url);                    }                } catch (Exception e) {                    // TODO: handle exception                }            }            @Override            public void onCancel() {                // TODO Auto-generated method stub            }        };    }    /**     * 登录之后需要进行的操作     */    private void loginLast(String loginVlue) {        String nickName = loginVlue.split("-")[0];        String url = loginVlue.split("-")[1];        //加载头像        Glide.with(MainActivity.this).load(url).bitmapTransform(new CropCircleTransformation(MainActivity.this)).crossFade(1000).into(Img_User);        //获得用户名称        tv_username.setText(nickName);        MyAplication.isLogin = true;        MyAplication.username = nickName + "-" + url;        SharedPreferencesUtils.SavaSharedPreferences(MainActivity.this, SharedPreferencesUtils.VALUEONENAME,                SharedPreferencesUtils.LOGINVALUE, nickName + "-" + url);        Log.e("dxq", "url " + url);    }    @Override    protected void onDestroy() {        if (mTencent != null) {            mTencent.logout(MainActivity.this);        }        super.onDestroy();    }    /**     * QQ登录     */    private void QQlogin() {        if (!mTencent.isSessionValid()) {            mTencent.login(MainActivity.this, scope, loginListener);        }    }    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        if (requestCode == Constants.REQUEST_API) {            if (resultCode == Constants.RESULT_LOGIN) {                Tencent.handleResultData(data, loginListener);            }            super.onActivityResult(requestCode, resultCode, data);        }    }    /**     * 调用支付     *     * @param alipayOrWechatPay     *            支付类型，true为支付宝支付,false为微信支付     */    void pay(final boolean alipayOrWechatPay) {        try {            Intent intent = new Intent(Intent.ACTION_MAIN);            intent.addCategory(Intent.CATEGORY_LAUNCHER);            ComponentName cn = new ComponentName("com.bmob.app.sport",                    "com.bmob.app.sport.wxapi.BmobActivity");            intent.setComponent(cn);            this.startActivity(intent);        } catch (Throwable e) {            e.printStackTrace();        }        final String name = "文学经典";        BP.pay(name, "求赞助,无利不早起,如果您喜欢它,不放小额赞助一下我们,以便我们用于支付服务器的费用，感激不尽。",6.66, alipayOrWechatPay, new PListener() {            // 因为网络等原因,支付结果未知(小概率事件),出于保险起见稍后手动查询            @Override            public void unknow() {            }            // 支付成功,如果金额较大请手动查询确认            @Override            public void succeed() {                Toast.makeText(MainActivity.this, "支付成功!谢谢.", Toast.LENGTH_SHORT).show();            }            // 无论成功与否,返回订单号            @Override            public void orderId(String orderId) {                // 此处应该保存订单号,比如保存进数据库等,以便以后查询            }            // 支付失败,原因可能是用户中断支付操作,也可能是网络原因            @Override            public void fail(int code, String reason) {                // 当code为-2,意味着用户中断了操作                // code为-3意味着没有安装BmobPlugin插件                if (code == -3) {                    Toast.makeText(                            MainActivity.this,                            "监测到你尚未安装支付插件,无法进行支付,请先安装插件(已打包在本地,无流量消耗),安装结束后重新支付",                            Toast.LENGTH_SHORT).show();                    installBmobPayPlugin("bp.db");                } else {                    finish();                }            }        });    }    //安装支付插件在assets中    public void installBmobPayPlugin(String fileName) {        try {            InputStream is = getAssets().open(fileName);            File file = new File(Environment.getExternalStorageDirectory()                    + File.separator + fileName + ".apk");            if (file.exists())                file.delete();            file.createNewFile();            FileOutputStream fos = new FileOutputStream(file);            byte[] temp = new byte[1024];            int i = 0;            while ((i = is.read(temp)) > 0) {                fos.write(temp, 0, i);            }            fos.close();            is.close();            Intent intent = new Intent(Intent.ACTION_VIEW);            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            intent.setDataAndType(Uri.parse("file://" + file),                    "application/vnd.android.package-archive");            startActivity(intent);        } catch (Exception e) {            e.printStackTrace();        }    }}